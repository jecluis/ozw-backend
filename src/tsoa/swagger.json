{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"CommandEnum": {
				"enum": [
					0,
					1,
					2,
					3,
					4,
					5,
					6,
					7,
					8,
					9,
					10,
					11,
					12,
					13,
					14,
					15,
					16,
					17,
					18
				],
				"type": "number"
			},
			"CommandState": {
				"properties": {
					"command": {
						"$ref": "#/components/schemas/CommandEnum"
					},
					"is_completed": {
						"type": "boolean"
					},
					"is_failed": {
						"type": "boolean"
					},
					"is_cancelled": {
						"type": "boolean"
					},
					"is_running": {
						"type": "boolean"
					},
					"is_waiting": {
						"type": "boolean"
					},
					"percent_done": {
						"type": "number",
						"format": "double"
					},
					"time_started": {
						"type": "string",
						"format": "date-time"
					},
					"time_finished": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"command",
					"is_completed",
					"is_failed",
					"is_cancelled",
					"is_running",
					"is_waiting",
					"percent_done",
					"time_started"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CommandStatus": {
				"properties": {
					"is_running_command": {
						"type": "boolean"
					},
					"current_command": {
						"$ref": "#/components/schemas/CommandState"
					},
					"last_command": {
						"$ref": "#/components/schemas/CommandState"
					}
				},
				"required": [
					"is_running_command"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OZWDriverStatus": {
				"properties": {
					"is_connected": {
						"type": "boolean"
					},
					"is_ready": {
						"type": "boolean"
					},
					"is_failed": {
						"type": "boolean"
					},
					"is_scan_complete": {
						"type": "boolean"
					},
					"is_db_ready": {
						"type": "boolean"
					},
					"device": {
						"type": "string"
					}
				},
				"required": [
					"is_connected",
					"is_ready",
					"is_failed",
					"is_scan_complete",
					"is_db_ready",
					"device"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkStatusEnum": {
				"enum": [
					0,
					1,
					2,
					3,
					4,
					5,
					6
				],
				"type": "number"
			},
			"NetworkStatus": {
				"properties": {
					"state": {
						"$ref": "#/components/schemas/NetworkStatusEnum"
					},
					"str": {
						"type": "string"
					},
					"nodes_total": {
						"type": "number",
						"format": "double"
					},
					"nodes_alive": {
						"type": "number",
						"format": "double"
					},
					"nodes_asleep": {
						"type": "number",
						"format": "double"
					},
					"nodes_awake": {
						"type": "number",
						"format": "double"
					},
					"nodes_dead": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"state",
					"str",
					"nodes_total",
					"nodes_alive",
					"nodes_asleep",
					"nodes_awake",
					"nodes_dead"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkStatusItem": {
				"properties": {
					"driver": {
						"$ref": "#/components/schemas/OZWDriverStatus"
					},
					"network": {
						"$ref": "#/components/schemas/NetworkStatus"
					}
				},
				"required": [
					"driver",
					"network"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SimpleReply": {
				"properties": {
					"rc": {
						"type": "number",
						"format": "double"
					},
					"str": {
						"type": "string"
					}
				},
				"required": [
					"rc",
					"str"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkNodeInfo": {
				"properties": {
					"manufacturer": {
						"type": "string"
					},
					"manufacturerid": {
						"type": "string"
					},
					"product": {
						"type": "string"
					},
					"producttype": {
						"type": "string"
					},
					"productid": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"loc": {
						"type": "string"
					}
				},
				"required": [
					"manufacturer",
					"manufacturerid",
					"product",
					"producttype",
					"productid",
					"type",
					"name",
					"loc"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkNodeCaps": {
				"properties": {
					"is_controller": {
						"type": "boolean"
					},
					"is_primary_controller": {
						"type": "boolean"
					}
				},
				"required": [
					"is_controller",
					"is_primary_controller"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkNodeProperties": {
				"properties": {
					"is_listening": {
						"type": "boolean"
					},
					"is_routing": {
						"type": "boolean"
					},
					"is_beaming": {
						"type": "boolean"
					}
				},
				"required": [
					"is_listening",
					"is_routing",
					"is_beaming"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkNodeType": {
				"properties": {
					"is_switch": {
						"type": "boolean"
					},
					"is_meter": {
						"type": "boolean"
					}
				},
				"required": [
					"is_switch",
					"is_meter"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkNodeStateEnum": {
				"enum": [
					0,
					1,
					2,
					3,
					4,
					5,
					6
				],
				"type": "number"
			},
			"NetworkNodeState": {
				"properties": {
					"state": {
						"$ref": "#/components/schemas/NetworkNodeStateEnum"
					},
					"str": {
						"type": "string"
					}
				},
				"required": [
					"state",
					"str"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkNode": {
				"properties": {
					"id": {
						"type": "number",
						"format": "double"
					},
					"info": {
						"$ref": "#/components/schemas/NetworkNodeInfo"
					},
					"is_ready": {
						"type": "boolean"
					},
					"capabilities": {
						"$ref": "#/components/schemas/NetworkNodeCaps"
					},
					"properties": {
						"$ref": "#/components/schemas/NetworkNodeProperties"
					},
					"type": {
						"$ref": "#/components/schemas/NetworkNodeType"
					},
					"state": {
						"$ref": "#/components/schemas/NetworkNodeState"
					},
					"last_seen": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"info",
					"is_ready",
					"capabilities",
					"properties",
					"type",
					"state",
					"last_seen"
				],
				"type": "object",
				"additionalProperties": false
			},
			"APISetNodeNameRequest": {
				"properties": {
					"name": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkValueId": {
				"properties": {
					"node_id": {
						"type": "number",
						"format": "double"
					},
					"class_id": {
						"type": "number",
						"format": "double"
					},
					"instance": {
						"type": "number",
						"format": "double"
					},
					"index": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"node_id",
					"class_id",
					"instance",
					"index"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValueType": {
				"anyOf": [
					{
						"type": "string",
						"enum": [
							"bool"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"byte"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"decimal"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"int"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"list"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"schedule"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"short"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"string"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"button"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"raw"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"max"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"bitset"
						],
						"nullable": false
					}
				]
			},
			"ValueGenre": {
				"anyOf": [
					{
						"type": "string",
						"enum": [
							"basic"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"user"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"system"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"config"
						],
						"nullable": false
					},
					{
						"type": "string",
						"enum": [
							"count"
						],
						"nullable": false
					}
				]
			},
			"Value": {
				"properties": {
					"value_id": {
						"type": "string"
					},
					"node_id": {
						"type": "number",
						"format": "double"
					},
					"class_id": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"$ref": "#/components/schemas/ValueType"
					},
					"genre": {
						"$ref": "#/components/schemas/ValueGenre"
					},
					"instance": {
						"type": "number",
						"format": "double"
					},
					"index": {
						"type": "number",
						"format": "double"
					},
					"label": {
						"type": "string"
					},
					"units": {
						"type": "string"
					},
					"help": {
						"type": "string"
					},
					"read_only": {
						"type": "boolean"
					},
					"write_only": {
						"type": "boolean"
					},
					"min": {
						"type": "number",
						"format": "double"
					},
					"max": {
						"type": "number",
						"format": "double"
					},
					"is_polled": {
						"type": "boolean"
					},
					"values": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"value": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"value_id",
					"node_id",
					"class_id",
					"type",
					"genre",
					"instance",
					"index",
					"label",
					"units",
					"help",
					"read_only",
					"write_only",
					"min",
					"max",
					"is_polled",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NetworkValue": {
				"properties": {
					"id": {
						"$ref": "#/components/schemas/NetworkValueId"
					},
					"value": {
						"$ref": "#/components/schemas/Value"
					},
					"last_seen": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"id",
					"value",
					"last_seen"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ValueSetRequest": {
				"properties": {
					"value_id": {
						"type": "string"
					},
					"node_id": {
						"type": "number",
						"format": "double"
					},
					"class_id": {
						"type": "number",
						"format": "double"
					},
					"instance": {
						"type": "number",
						"format": "double"
					},
					"index": {
						"type": "number",
						"format": "double"
					},
					"value_type": {
						"type": "string"
					},
					"value": {
						"anyOf": [
							{
								"type": "boolean"
							},
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "string"
							}
						]
					}
				},
				"required": [
					"value_id",
					"node_id",
					"class_id",
					"instance",
					"index",
					"value_type",
					"value"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "ozw-backend",
		"version": "1.0.0",
		"description": "Backend for an openzwave frontend dashboard",
		"license": {
			"name": "EUPL-1.2"
		},
		"contact": {
			"name": "Joao Eduardo Luis"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/command/node/add": {
			"put": {
				"operationId": "NodeAdd",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/command/node/remove": {
			"put": {
				"operationId": "NodeRemove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/command/network/heal": {
			"put": {
				"operationId": "HealNetwork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/command/cancel": {
			"put": {
				"operationId": "CancelCommand",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/command/status": {
			"get": {
				"operationId": "GetCommandStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommandStatus"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/network/status": {
			"get": {
				"operationId": "GetNetworkStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NetworkStatusItem"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/network/devices": {
			"get": {
				"operationId": "GetAvailableDevices",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"type": "string"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/network/start": {
			"post": {
				"operationId": "StartNetwork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SimpleReply"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/network/stop": {
			"post": {
				"operationId": "StopNetwork",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SimpleReply"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/network/ready": {
			"get": {
				"operationId": "GetIsReady",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/nodes": {
			"get": {
				"operationId": "GetNodes",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/NetworkNode"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/api/nodes/{id}": {
			"get": {
				"operationId": "GetNode",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NetworkNode"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"reason": {
											"type": "string"
										}
									},
									"required": [
										"reason"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/nodes/{id}/name": {
			"post": {
				"operationId": "SetNodeName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/APISetNodeNameRequest"
							}
						}
					}
				}
			}
		},
		"/api/nodes/{id}/values": {
			"get": {
				"operationId": "GetValues",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/NetworkValue"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/api/nodes/{id}/values/genre/{genre}": {
			"get": {
				"operationId": "GetValuesByGenre",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/NetworkValue"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "genre",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/nodes/{id}/values/id/{valueid}": {
			"get": {
				"operationId": "GetValueByID",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NetworkValue"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "valueid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "SetValueByID",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "valueid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ValueSetRequest"
							}
						}
					}
				}
			}
		},
		"/api/nodes/{id}/values/button/{valueid}/press": {
			"post": {
				"operationId": "SetButtonPressedByID",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "valueid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ValueSetRequest"
							}
						}
					}
				}
			}
		},
		"/api/nodes/{id}/values/button/{valueid}/release": {
			"post": {
				"operationId": "SetButtonReleasedByID",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "valueid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ValueSetRequest"
							}
						}
					}
				}
			}
		},
		"/api/nodes/{id}/neighbors": {
			"get": {
				"operationId": "GetNodeNeighbors",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"type": "number",
										"format": "double"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}